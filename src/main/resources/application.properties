# ServerProperties
server.port=8080
server.servlet.context-path=/community

# 首先我们需要再application.properties配置文件中将thymeleaf中的缓存关闭，这样保证了我们在修改页面了以后可以及时看到页面的变化
# ThymeleafProperties
spring.thymeleaf.cache=false


# DataSourceProperties
# mysql的驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# mysql的连接地址，表示连接哪个数据库，mysql8以后是需要自己去配置时区的
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
# mysql的用户名
spring.datasource.username=root
# mysql的密码
spring.datasource.password=
# 连接池的类型，现在常用的数据库连接池一般有DBCP、C3p0、Druid等
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 最大连接数
spring.datasource.hikari.maximum-pool-size=15
# 最小连接数
spring.datasource.hikari.minimum-idle=5
# 超时等待时间，当超过这个时间还没有连接成功就放弃连接
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
# resources目录下的编写sql语句的文件，在resources目录下有一个mapper目录，这个目录下面的以.xml结尾的文件都可以被映射到
mybatis.mapper-locations=classpath:mapper/*.xml
# 用来扫描实体类
mybatis.type-aliases-package=com.nowcoder.community.entity
# 表示主键自增
mybatis.configuration.useGeneratedKeys=true
# 表示表中的数据一般是下划线的方式，而实体类中的属性是使用的驼峰命令的方式的，这个设置可以让他们相互对应
mybatis.configuration.mapUnderscoreToCamelCase=true

#logger
logging.level.com.nowcoder.community = debug
logging.file.name=community/community.log


#MailProperties
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=2094881532@qq.com
spring.mail.password=vdkwtnxbacvwfbfd
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

#community
community.path.domain=http://localhost:8080

# 头像上传的位置
community.path.upload = D:/JAVA/tools/data

# RedisProperties
spring.redis.database=1
spring.redis.host=localhost
spring.redis.port=6379

# KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000


# ElasticsearchProperties
spring.data.elasticsearch.cluster-name=nowcoder
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300


# TaskExecutionProperties
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties
spring.task.scheduling.pool.size=5

# QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5


# wk
wk.image.command=D:/JAVA/tools/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=D:/JAVA/tools/wkhtmltopdf/data/wk-images


# qiniu
qiniu.key.access=gCHYGKULsLRa6iRL_m7IuBlkD8nwVVSVomHC1Kaj
qiniu.key.secret=RFFiWpZtBAwVXnBaDsZ1kxyYI6B344UlCSabL2kl
qiniu.bucket.header.name=mia-community-header
quniu.bucket.header.url=http://re543hpz8.hd-bkt.clouddn.com
qiniu.bucket.share.name=mia-community-share
qiniu.bucket.share.url=http://re54tikv3.hd-bkt.clouddn.com


# caffeine
caffeine.posts.max-size=15
caffeine.posts.expire-seconds=180


# actuator
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=info,caches